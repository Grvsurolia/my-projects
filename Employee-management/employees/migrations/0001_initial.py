# Generated by Django 3.1.4 on 2021-10-06 10:34

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import employees.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email_address')),
                ('employee_code', models.CharField(max_length=255, unique=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='upload/')),
                ('CardID', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('salary', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=12, null=True)),
                ('alternative_number', models.CharField(blank=True, max_length=12, null=True)),
                ('team', models.CharField(blank=True, choices=[('python', 'PYTHON'), ('other', 'OTHER')], max_length=100, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'MALE'), ('female', 'FEMALE')], max_length=100, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(default='IN', max_length=255)),
                ('pincode', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=255, null=True)),
                ('martial_status', models.CharField(blank=True, choices=[('married', 'MARRIED'), ('unmarried', 'UNMARRIED')], default='unmarried', max_length=100, null=True)),
                ('aadhar_id', models.CharField(blank=True, default='0', max_length=20, null=True)),
                ('pan_no', models.CharField(blank=True, default='0', max_length=10, null=True)),
                ('hr_common_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Hr Email_address')),
                ('is_hr', models.BooleanField(default=False)),
                ('is_supervisor', models.BooleanField(default=False)),
                ('is_ceo', models.BooleanField(default=False)),
                ('is_cto', models.BooleanField(default=False)),
                ('is_teamlead', models.BooleanField(default=False)),
                ('is_delete', models.BooleanField(default=False)),
                ('password_change', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'User',
                'ordering': [],
            },
            managers=[
                ('objects', employees.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('technical', 'Technical'), ('non-technical', 'Non-Technical'), ('other', 'Other')], default='technical', max_length=100)),
                ('is_delete', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='UpdateRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=12, null=True)),
                ('alternative_number', models.CharField(blank=True, max_length=12, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'MALE'), ('female', 'FEMALE')], max_length=100, null=True)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, max_length=255, null=True)),
                ('pincode', models.CharField(blank=True, max_length=255, null=True)),
                ('age', models.PositiveIntegerField(blank=True, null=True)),
                ('blood_group', models.CharField(blank=True, max_length=255, null=True)),
                ('martial_status', models.CharField(blank=True, choices=[('married', 'MARRIED'), ('unmarried', 'UNMARRIED')], default='unmarried', max_length=100, null=True)),
                ('uid', models.CharField(blank=True, default='0', max_length=12, null=True)),
                ('pan_no', models.CharField(blank=True, default='0', max_length=10, null=True)),
                ('file', models.FileField(upload_to='upload/% Y/% m/% d/')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Bankaccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('ifsc', models.CharField(max_length=50)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_holder_name', models.CharField(max_length=100)),
                ('is_delete', models.BooleanField(default=False)),
                ('employee', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bankaccount',
                'verbose_name_plural': 'Bankaccounts',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='employees.department'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
